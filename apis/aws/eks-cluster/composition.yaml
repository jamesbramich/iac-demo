#------------------------------------------------------------------------------
# Filename: composition.yaml
#
# Description: Composition for EKS Cluster. Based on:
#                  https://github.com/upbound/configuration-aws-eks/blob/main/apis/composition.yaml
#
# Author: James Bramich (james@nofrixion.com)
#
# TODO
# - remove security group rules for database access (hangover from reference architecture)
# 
# History:
# 25 March      2024  James Bramich   Created, Northdown, Tasmania
#-----------------------------------------------------------------------------

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xclusters.aws.nofrixion.com
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: aws.nofrixion.com/v1alpha1
    kind: XCluster
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
          - name: providerConfigRef
            patches:
              - fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
          - name: deletionPolicy
            patches:
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
          - name: region
            patches:
              - fromFieldPath: spec.parameters.region
                toFieldPath: spec.forProvider.region
                type: FromCompositeFieldPath
        resources:
          - name: XNetwork
            base:
              apiVersion: aws.nofrixion.com/v1alpha1
              kind: XNetwork
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.namespace
                toFieldPath: metadata.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.parameters.id
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.existingNetwork
                toFieldPath: spec.parameters.existingNetwork
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.region
                toFieldPath: spec.parameters.region
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.parameters.deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.parameters.providerConfigName
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.networkSelector
                toFieldPath: spec.compositionSelector.matchLabels[type]
              - type: ToCompositeFieldPath
                fromFieldPath: status.subnetIds
                policy:
                  fromFieldPath: Required
                toFieldPath: status.subnetIds

          - name: controlplaneRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: controlplane
              spec:
                forProvider:
                  assumeRolePolicy: |
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "eks.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole"
                              ]
                          }
                      ]
                    }
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-cluster-role'
                      type: Format

          - name: clusterRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: controlplane
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-cluster-rolepolicyattachment'
                      type: Format

          - name: kubernetesCluster
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: Cluster
              spec:
                forProvider:
                  roleArnSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: controlplane
                  vpcConfig:
                    - endpointPrivateAccess: true
                      endpointPublicAccess: true
                      subnetIdSelector:
                        matchLabels:
                          access: public
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations["crossplane.io/external-name"]
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.vpcConfig[0].subnetIdSelector.matchLabels[networks.aws.platform.upbound.io/network-id]
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.version
                toFieldPath: spec.forProvider.version
                type: FromCompositeFieldPath
              - fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidc
                type: ToCompositeFieldPath
              - fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidcUri
                transforms:
                  - string:
                      trim: https://
                      type: TrimPrefix
                    type: string
                type: ToCompositeFieldPath
              - fromFieldPath: status.atProvider.roleArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.accountId
                transforms:
                  - string:
                      regexp:
                        group: 1
                        match: arn:aws:iam::(\d+):.*
                      type: Regexp
                    type: string
                type: ToCompositeFieldPath
              - fromFieldPath: status.atProvider.vpcConfig[0].clusterSecurityGroupId
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.clusterSecurityGroupId
                type: ToCompositeFieldPath

# This should really be optional, but for now is required.
          - name: identityProviderConfig
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: IdentityProviderConfig
              metadata:
                annotations:
                  uptest.upbound.io/timeout: "3600"
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
                  tags:
                    Name: nofrixion-azure-entra-id
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.identityProvider.clientId
                toFieldPath: spec.forProvider.oidc[0].clientId
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.identityProvider.issuerUrl
                toFieldPath: spec.forProvider.oidc[0].issuerUrl
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.identityProvider.usernameClaim
                toFieldPath: spec.forProvider.oidc[0].usernameClaim
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.identityProvider.groupsClaim
                toFieldPath: spec.forProvider.oidc[0].groupsClaim
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-identity-provider-config'
                      type: Format

          - name: identityProviderClusterRoleBinding
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: rbac.authorization.k8s.io/v1
                    kind: ClusterRoleBinding
                    roleRef:
                      apiGroup: rbac.authorization.k8s.io
                      kind: ClusterRole
                      name: cluster-admin
                    subjects:
                      - kind: Group
                        apiGroup: rbac.authorization.k8s.io
            patches:
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.identityProvider.adminGroupId
                toFieldPath: spec.forProvider.manifest.subjects[0].name
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-entra-id-admins-cluster-rolebinding'
                      type: Format
                    type: string
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-admin-cluster-role-binding'
                      type: Format

          - name: clusterSecurityGroupImport
            base:
              apiVersion: ec2.aws.upbound.io/v1beta1
              kind: SecurityGroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: status.eks.clusterSecurityGroupId
                policy:
                  fromFieldPath: Required
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.tags[eks.aws.platform.upbound.io/discovery]

          - name: kubernetesClusterAuth
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: ClusterAuth
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
            connectionDetails:
              - fromConnectionSecretKey: kubeconfig
                name: kubeconfig
                type: FromConnectionSecretKey
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.writeConnectionSecretToRef.namespace
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.uid
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-cluster-auth'
                      type: Format

          - name: nodegroupRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: nodegroup
              spec:
                forProvider:
                  assumeRolePolicy: |
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "ec2.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole"
                              ]
                          }
                      ]
                    }
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.tags["Name"]
                transforms:
                  - type: string
                    string:
                      fmt: 'nofrixion_NodeGroupRole_%s-cluster'
                      type: Format
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.nodeGroupRoleArn
                type: ToCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-nodegroup-role'
                      type: Format

          - name: workerNodeRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-nodegroup-rolepolicyattachment'
                      type: Format

          - name: cniRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-cni-rolepolicyattachment'
                      type: Format

          - name: containerRegistryRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-cont-registry-rolepolicyattachment'
                      type: Format

          - name: nodeGroupPrivate
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: NodeGroup
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
                  instanceTypes:
                    - t3.small
                  nodeRoleArnSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
                  scalingConfig:
                    - desiredSize: 1
                      maxSize: 100
                      minSize: 1
                  subnetIdSelector:
                    matchLabels:
                      access: private
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: spec.parameters.nodes.count
                toFieldPath: spec.forProvider.scalingConfig[0].desiredSize
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.nodes.instanceType
                toFieldPath: spec.forProvider.instanceTypes[0]
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.subnetIdSelector.matchLabels[networks.aws.platform.upbound.io/network-id]
                type: FromCompositeFieldPath
              - fromFieldPath: status.atProvider.clusterName
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.clusterName
                type: ToCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-nodegroup1'
                      type: Format

          - name: ebsCsiAddonRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: ebsCsiAddon
              spec:
                forProvider:
                  assumeRolePolicy: ""
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: CombineFromComposite
                toFieldPath: spec.forProvider.assumeRolePolicy
                combine:
                  variables:
                  - fromFieldPath: status.eks.accountId
                  - fromFieldPath: status.eks.oidcUri
                  - fromFieldPath: status.eks.oidcUri
                  - fromFieldPath: status.eks.oidcUri
                  strategy: string
                  string:
                    fmt: |
                      {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                              "StringEquals": {
                                "%s:aud": "sts.amazonaws.com",
                                "%s:sub": "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                              }
                            }
                          }
                        ]
                      }
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.tags["Name"]
                transforms:
                  - type: string
                    string:
                      fmt: 'nofrixion_EBS_CSI_DriverRole_%s-cluster'
                      type: Format
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.ebsCsiAddonRoleArn
                type: ToCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-ebs-csi-role'
                      type: Format

          - name: ebsCsiRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: ebsCsiAddon
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-ebs-csi-rolepolicyattachment'
                      type: Format

          - name: ebsCsiAddon
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: Addon
              spec:
                forProvider:
                  addonName: aws-ebs-csi-driver
                  clusterNameSelector:
                    matchControllerRef: true
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: status.eks.clusterName
                policy:
                  fromFieldPath: Required
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                transforms:
                  - string:
                      fmt: '%s:aws-ebs-csi-driver'
                      type: Format
                    type: string
                type: FromCompositeFieldPath

          - name: efsCsiAddonRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: efsCsiAddon
              spec:
                forProvider:
                  assumeRolePolicy: ""
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: CombineFromComposite
                toFieldPath: spec.forProvider.assumeRolePolicy
                combine:
                  variables:
                  - fromFieldPath: status.eks.accountId
                  - fromFieldPath: status.eks.oidcUri
                  - fromFieldPath: status.eks.oidcUri
                  - fromFieldPath: status.eks.oidcUri
                  strategy: string
                  string:
                    fmt: |
                      {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                              "StringEquals": {
                                "%s:aud": "sts.amazonaws.com",
                                "%s:sub": "system:serviceaccount:kube-system:efs-csi-*"
                              }
                            }
                          }
                        ]
                      }
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.tags["Name"]
                transforms:
                  - type: string
                    string:
                      fmt: 'nofrixion_EFS_CSI_DriverRole_%s-cluster'
                      type: Format
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.efsCsiAddonRoleArn
                type: ToCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-efs-csi-role'
                      type: Format

          - name: efsCsiRolePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy 
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: efsCsiAddon
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: "metadata.annotations[crossplane.io/external-name]"
                transforms:
                  - type: string
                    string:
                      fmt: '%s-efs-csi-rolepolicyattachment'
                      type: Format

          - name: efsCsiAddon
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: Addon
              spec:
                forProvider:
                  addonName: aws-efs-csi-driver
                  clusterNameSelector:
                    matchControllerRef: true
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: status.eks.clusterName
                policy:
                  fromFieldPath: Required
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                transforms:
                  - string:
                      fmt: '%s:aws-efs-csi-driver'
                      type: Format
                    type: string
                type: FromCompositeFieldPath

          - name: oidcProvider
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: OpenIDConnectProvider
              spec:
                forProvider:
                  clientIdList:
                    - sts.amazonaws.com
                  thumbprintList:
                    - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - fromFieldPath: status.eks.oidc
                policy:
                  fromFieldPath: Required
                toFieldPath: spec.forProvider.url
                type: FromCompositeFieldPath
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidcArn
                type: ToCompositeFieldPath

          - name: providerConfigHelm
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
            readinessChecks:
              - type: None

          - name: providerConfigKubernetes
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                  source: Secret
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-k8s-provider'
                      type: Format
                    type: string
              - fromFieldPath: spec.writeConnectionSecretToRef.namespace
                toFieldPath: spec.credentials.secretRef.namespace
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
            readinessChecks:
              - type: None

          - name: irsaSettings
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      namespace: default
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-irsa-settings'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.manifest.metadata.name
                transforms:
                  - string:
                      fmt: '%s-irsa-settings'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: status.eks.oidcArn
                toFieldPath: spec.forProvider.manifest.data.oidc_arn
                type: FromCompositeFieldPath
              - fromFieldPath: status.eks.oidcUri
                toFieldPath: spec.forProvider.manifest.data.oidc_host
                type: FromCompositeFieldPath

          - name: awsAuth
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: aws-auth
                      namespace: kube-system
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-aws-auth'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - combine:
                  strategy: string
                  string:
                    fmt: |
                      - groups:
                        - system:bootstrappers
                        - system:nodes
                        rolearn: %s
                        username: system:node:{{EC2PrivateDNSName}}
                      - groups:
                        - system:bootstrappers
                        - system:nodes
                        rolearn: %s
                        username: system:node:{{EC2PrivateDNSName}}
                      - groups:
                        - system:masters
                        rolearn: %s
                        username: adminrole
                  variables:
                    - fromFieldPath: status.eks.nodeGroupRoleArn
                    - fromFieldPath: spec.parameters.iam.autoscalerArn
                    - fromFieldPath: spec.parameters.iam.roleArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: spec.forProvider.manifest.data.mapRoles
                type: CombineFromComposite
              - combine:
                  strategy: string
                  string:
                    fmt: |
                      - groups:
                        - system:masters
                        userarn: %s
                        username: adminuser
                  variables:
                    - fromFieldPath: spec.parameters.iam.userArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: spec.forProvider.manifest.data.mapUsers
                type: CombineFromComposite

          - name: usageXNetworkByEKSCluster
            base:
              apiVersion: apiextensions.crossplane.io/v1alpha1
              kind: Usage
              spec:
                by:
                  apiVersion: eks.aws.upbound.io/v1beta1
                  kind: Cluster
                  resourceSelector:
                    matchControllerRef: true
                of:
                  apiVersion: aws.nofrixion.com/v1alpha1
                  kind: XNetwork
                  resourceSelector:
                    matchControllerRef: true
            readinessChecks:
              - type: None
                        
          - name: usageXEksByArbitraryLabeledRelease
            base:
              apiVersion: apiextensions.crossplane.io/v1alpha1
              kind: Usage
              spec:
                by:
                  apiVersion: helm.crossplane.io/v1beta1
                  kind: Release
                  resourceSelector:
                    matchLabels:
                      platform.upbound.io/deletion-ordering: enabled
                of:
                  apiVersion: eks.aws.upbound.io/v1beta1
                  kind: Cluster
                  resourceSelector:
                    matchControllerRef: true
            readinessChecks:
              - type: None
                        
          - name: usageXEksByK8sProviderConfig
            base:
              apiVersion: apiextensions.crossplane.io/v1alpha1
              kind: Usage
              spec:
                of:
                  apiVersion: eks.aws.upbound.io/v1beta1
                  kind: Cluster
                  resourceSelector:
                    matchControllerRef: true
                by:
                  apiVersion: kubernetes.crossplane.io/v1alpha1
                  kind: ProviderConfig
                  resourceRef:
                   name: providerConfigKubernetes
            readinessChecks:
              - type: None
